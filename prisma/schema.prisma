// learn more about it in the docs: https://pris.ly/d/prisma-schema
// This is your Prisma schema file,

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum ROLE {
  USER
  ADMIN 
}

enum PAYMENT_METHOD {
  COD
}
enum ORDER_STATUS {
  INPROGRESS
  COMPLETED
  CANCELED
}

enum PRODUCT_STATUS {
  AVAILABLE
  SOLDOUT
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId 
  name String
  email String  @unique
  password String 
  phone String @unique
  avatar String?
  orders Order[]
  feedback Feedback[]
  role ROLE @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  price String
  discount Float
  description String
  buyTurn String
  images String[]
  unitQuantity String
  categoryId String @db.ObjectId
  category Category @relation(fields: [categoryId] , references: [id])
  brandId String @db.ObjectId
  brand Brand @relation(fields: [brandId] , references: [id])
  status PRODUCT_STATUS @default(AVAILABLE)
  feedback Feedback[]
  OrderDetail OrderDetail[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@unique([id,name])
}

model Category {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  thumbnail String
  product Product[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@unique([id,name])
}

model Brand {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  thumnail String
  product Product[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@unique([id,name])
}


model Feedback {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  content String?
  ratting Int?
  userId String @db.ObjectId
  user User @relation(fields: [userId],references: [id])
  productId String @db.ObjectId
  product Product @relation(fields: [productId],references: [id])
}

model Order {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  user User @relation(fields: [userId], references: [id])
  orderItem OrderDetail[]
  deliveryAddress String
  paymentMethod PAYMENT_METHOD @default(COD)
  status ORDER_STATUS @default(INPROGRESS)
  subTotal String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@unique([id,userId])     
}


model OrderDetail {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  orderId String @db.ObjectId
  order Order @relation(fields: [orderId], references: [id])
  productId String @db.ObjectId
  product Product @relation(fields: [productId], references: [id])
  quantity String
  price String
  @@unique([id, orderId,productId])
}
